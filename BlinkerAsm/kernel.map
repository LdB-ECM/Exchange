
Discarded input sections

 .ARM.attributes
                0x00000000       0x25 build/gpio.o
 .ARM.attributes
                0x00000000       0x25 build/main.o
 .ARM.attributes
                0x00000000       0x25 build/SmartStart32.o
 .ARM.attributes
                0x00000000       0x25 build/systemTimer.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD build/gpio.o
LOAD build/main.o
LOAD build/SmartStart32.o
LOAD build/systemTimer.o

.init           0x00008000      0x308
 *(.init)
 .init          0x00008000      0x308 build/SmartStart32.o
                0x00008000                _start

.text           0x00008308      0x1d0
                0x00008308                . = ALIGN (0x4)
                0x00008308                __text_start__ = .
 *(.text .text.*)
 .text          0x00008308        0x0 build/gpio.o
 .text.gpio_output
                0x00008308       0x64 build/gpio.o
                0x00008308                gpio_output
 .text.gpio_setup
                0x0000836c       0x74 build/gpio.o
                0x0000836c                gpio_setup
 .text          0x000083e0       0x44 build/main.o
                0x000083e0                main
 .text          0x00008424        0x0 build/SmartStart32.o
 .text.setTimerIrqAddress
                0x00008424       0x1c build/SmartStart32.o
                0x00008424                setTimerIrqAddress
 .text.ARMaddrToGPUaddr
                0x00008440       0x14 build/SmartStart32.o
                0x00008440                ARMaddrToGPUaddr
 .text.GPUaddrToARMaddr
                0x00008454       0x14 build/SmartStart32.o
                0x00008454                GPUaddrToARMaddr
 .text.EnableInterrupts
                0x00008468        0x8 build/SmartStart32.o
                0x00008468                EnableInterrupts
 .text.DisableInterrupts
                0x00008470        0x8 build/SmartStart32.o
                0x00008470                DisableInterrupts
 .text          0x00008478        0x0 build/systemTimer.o
 .text.timer_wait
                0x00008478       0x60 build/systemTimer.o
                0x00008478                timer_wait
                0x000084d8                __text_end__ = .

.data           0x000084d8       0x20
                0x000084d8                . = ALIGN (0x4)
                0x000084d8                __data_start__ = .
 *(.data .data.*)
 .data          0x000084d8        0x0 build/gpio.o
 .data          0x000084d8        0x0 build/main.o
 .data          0x000084d8        0x0 build/SmartStart32.o
 .data.smartstart
                0x000084d8        0x8 build/SmartStart32.o
 .data.smartstart32
                0x000084e0       0x18 build/SmartStart32.o
                0x000084e0                RPi_IO_Base_Addr
                0x000084e4                RPi_BootAddr
                0x000084e8                RPi_CPUBootMode
                0x000084ec                RPi_CpuId
                0x000084f0                RPi_CompileMode
                0x000084f4                RPi_CPUCurrentMode
 .data          0x000084f8        0x0 build/systemTimer.o
                0x000084f8                __data_end__ = .

.bss            0x000084f8        0x0
                0x000084f8                . = ALIGN (0x4)
                0x000084f8                __bss_start__ = .
 *(.bss .bss.*)
 .bss           0x000084f8        0x0 build/gpio.o
 .bss           0x000084f8        0x0 build/main.o
 .bss           0x000084f8        0x0 build/SmartStart32.o
 .bss           0x000084f8        0x0 build/systemTimer.o
                0x000084f8                __bss_end__ = .

.rodata         0x000084f8        0x0
                0x000084f8                . = ALIGN (0x4)
                0x000084f8                __rodata_start__ = .
 *(.rodata .rodata.*)
                0x000084f8                __rodata_end__ = .

.stack0         0x000084f8     0x8a00
                0x000084f8                . = ALIGN (0x8)
                0x000084f8                __stack_start__core0 = .
                0x000086f8                . = (. + 0x200)
 *fill*         0x000084f8      0x200 
                0x000086f8                __HYP_stack_core0 = .
                0x00008af8                . = (. + 0x400)
 *fill*         0x000086f8      0x400 
                0x00008af8                __IRQ_stack_core0 = .
                0x00008ef8                . = (. + 0x400)
 *fill*         0x00008af8      0x400 
                0x00008ef8                __FIQ_stack_core0 = .
                0x00010ef8                . = (. + 0x8000)
 *fill*         0x00008ef8     0x8000 
                0x00010ef8                __SVC_stack_core0 = .
                0x00010ef8                __stack_end__core0 = .

.stack1         0x00010ef8     0x1a00
                0x00010ef8                . = ALIGN (0x8)
                0x00010ef8                __stack_start__core1 = .
                0x000110f8                . = (. + 0x200)
 *fill*         0x00010ef8      0x200 
                0x000110f8                __HYP_stack_core1 = .
                0x000114f8                . = (. + 0x400)
 *fill*         0x000110f8      0x400 
                0x000114f8                __IRQ_stack_core1 = .
                0x000118f8                . = (. + 0x400)
 *fill*         0x000114f8      0x400 
                0x000118f8                __FIQ_stack_core1 = .
                0x000128f8                . = (. + 0x1000)
 *fill*         0x000118f8     0x1000 
                0x000128f8                __SVC_stack_core1 = .
                0x000128f8                __stack_end__core1 = .

.stack2         0x000128f8     0x1a00
                0x000128f8                . = ALIGN (0x8)
                0x000128f8                __stack_start__core2 = .
                0x00012af8                . = (. + 0x200)
 *fill*         0x000128f8      0x200 
                0x00012af8                __HYP_stack_core2 = .
                0x00012ef8                . = (. + 0x400)
 *fill*         0x00012af8      0x400 
                0x00012ef8                __IRQ_stack_core2 = .
                0x000132f8                . = (. + 0x400)
 *fill*         0x00012ef8      0x400 
                0x000132f8                __FIQ_stack_core2 = .
                0x000142f8                . = (. + 0x1000)
 *fill*         0x000132f8     0x1000 
                0x000142f8                __SVC_stack_core2 = .
                0x000142f8                __stack_end__core2 = .

.stack3         0x000142f8     0x1a00
                0x000142f8                . = ALIGN (0x8)
                0x000142f8                __stack_start__core3 = .
                0x000144f8                . = (. + 0x200)
 *fill*         0x000142f8      0x200 
                0x000144f8                __HYP_stack_core3 = .
                0x000148f8                . = (. + 0x400)
 *fill*         0x000144f8      0x400 
                0x000148f8                __IRQ_stack_core3 = .
                0x00014cf8                . = (. + 0x400)
 *fill*         0x000148f8      0x400 
                0x00014cf8                __FIQ_stack_core3 = .
                0x00015cf8                . = (. + 0x1000)
 *fill*         0x00014cf8     0x1000 
                0x00015cf8                __SVC_stack_core3 = .
                0x00015cf8                __stack_end__core3 = .

/DISCARD/
 *(*)
OUTPUT(build/output.elf elf32-littlearm)
